name: Publish Production
on:
  push:
    tags:
      - 'v0.1.*'

jobs:
  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && endsWith(github.event.base_ref, '/main')
    runs-on: ubuntu-latest
    steps:
      - name: "Release PR info"
        if: github.event_name != 'workflow_dispatch'
        run: echo "PR ${{ github.event.number }}"
      - uses: actions/checkout@v3
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      - name: Extract tag version
        id: extract_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed -e 's/^refs\/tags\/v//' -e 's/^refs\/heads\/v//')"
      - name: Update package.json version
        run: |
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.extract_tag.outputs.tag }}\"/" package.json
      ############# GITHUB RELEASE ##############
      - name: "Create a GitHub release v${{ steps.extract_tag.outputs.tag }}"
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.extract_tag.outputs.tag }}"
          name: "Release v${{ steps.extract_tag.outputs.tag }}"
          body: |
            ## Release notes:
            ${{ steps.extract-release-notes.outputs.release_notes }}
      ############# NPM RELEASE ##############
      - name: Publish the release to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}