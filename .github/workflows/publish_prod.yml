name: Publish Production
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:

jobs:
  publish:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: "Release PR info"
        if: github.event_name != 'workflow_dispatch'
        run: echo "PR ${{ github.event.number }}"
      - uses: actions/checkout@v3
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      - name: Check version convention
        run: |
          version="${{ steps.package-version.outputs.current-version }}"
          if [[ ! "$version" =~ ^0\.0\.[0-9]{1,3}$ ]]; then
            echo "Invalid version convention. Expected v0.1.x with x in the range 0-999."
            exit 1
          fi
      ############# TAG RELEASE ##############
      - name: "Push tag v${{ steps.package-version.outputs.current-version }}"
        uses: rickstaa/action-create-tag@v1
        id: tag_version
        with:
          tag: "v${{ steps.package-version.outputs.current-version }}"
          force_push_tag: true
      ############# GITHUB RELEASE ##############
      - name: "Create a GitHub release v${{ steps.package-version.outputs.current-version }}"
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.package-version.outputs.current-version }}"
          name: "Release v${{ steps.package-version.outputs.current-version }}"
          body: |
            ## Release notes:
            ${{ steps.extract-release-notes.outputs.release_notes }}
      ############# NPM RELEASE ##############
      - name: Publish the release to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}